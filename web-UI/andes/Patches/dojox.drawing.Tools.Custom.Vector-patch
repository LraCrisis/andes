diff --git a/web-UI/dojox/drawing/Tools/Custom/Vector.js b/web-UI/dojox/drawing/Tools/Custom/Vector.js
index 08f6822..a217549 100755
--- a/web-UI/dojox/drawing/Tools/Custom/Vector.js
+++ b/web-UI/dojox/drawing/Tools/Custom/Vector.js
@@ -39,7 +39,7 @@ dojox.drawing.tools.custom.Vector = dojox.drawing.util.oo.declare(
 			// summary:
 			//		Special creation function for the zero-vector shape
 			//
-			var s = shp=="hit" ? this.minimumSize : this.minimumSize/2;
+			var s = shp=="hit" ? this.minimumSize : this.minimumSize/6;
 			var f = shp=="hit" ? sty.fill : null;
 			d = {
 				cx:this.data.x1,
@@ -76,19 +76,25 @@ dojox.drawing.tools.custom.Vector = dojox.drawing.util.oo.declare(
 			//
 			if(this.created || !this.shape){ return; }
 			// if too small, need to reset
-			
+			//This sets the zero length vector to zero within the minimum size
 			if(this.getRadius()<this.minimumSize){
-				//this.remove(this.shape, this.hit);
-				//return;
-			}
+				
+				var p = this.points;
+				this.setPoints([
+					{x:p[0].x, y:p[0].y},
+					{x:p[0].x, y:p[0].y}
+				]);
+				
+			} else {
 			
+			//Needed as else to avoid zero length problem in snapAngle
 			var pt = this.util.snapAngle(obj, this.angleSnap/180);
 			var p = this.points;
 			this.setPoints([
 				{x:p[0].x, y:p[0].y},
 				{x:pt.x, y:pt.y}
 			]);
-			
+			}
 			
 			this.renderedOnce = true;
 			this.onRender(this);
